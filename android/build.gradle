apply plugin: 'com.android.application'

buildscript {
    repositories {
        jcenter()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.1'
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com'
        }
    }
}

def getVersionCodeFromProjectProperty = { ->
    def code = project.hasProperty('versionCode') ? versionCode.toInteger() : 1
    logger.lifecycle("versionCode is set to $code")
    return code
}

def getVersionNameFromProjectProperty = { ->
    def name = project.hasProperty('versionName') ? versionName : "1.5"
    logger.lifecycle("versionName is set to $name")
    return name
}

def getApplicationIdFromProjectProperty = { ->
    def applicationId = project.hasProperty('applicationId') ? applicationId : "com.netsoltech.jcgroup.mobileexampleapp"
    logger.lifecycle("applicationId is set to $applicationId")
    return applicationId
}

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId getApplicationIdFromProjectProperty()
        minSdkVersion 19
        targetSdkVersion 27
        multiDexEnabled true
        versionCode getVersionCodeFromProjectProperty()
        versionName getVersionNameFromProjectProperty()

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags "-Wall", "-Wno-unknown-pragmas", "-Wno-sign-compare", "-Wno-format-security",
                         "-Wno-reorder", "-Wno-expansion-to-defined", "-frtti", "-fexceptions", "-std=c++11",
                         "-D__STDC_FORMAT_MACROS"
                arguments "-DANDROID=1", "-DANDROID_TOOLCHAIN=clang", "-DANDROID_ARM_MODE=arm"
            }

            ndk {
                abiFilters "armeabi-v7a"
            }
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            res.srcDirs = ['res']
            java.srcDirs = ['src']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs', 'libs/indooratlas']
        }

        androidTest {
            java.srcDirs = ['tests']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            externalNativeBuild {
                cmake {
                    cppFlags "-g"
                    arguments "-DDEBUG=1"
                }
            }

            jniDebuggable true
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "main"

    productFlavors {
        normal {
            dimension "main"
        }

        screenshot {
            dimension "main"

            externalNativeBuild {
                cmake {
                   cppFlags "-DAUTOMATED_SCREENSHOTS=1"
                }
            }
        }
    }

    externalNativeBuild {
        cmake {
            // Set path to external eegeo-mobile top CMakeLists here and in sdk/CMakeLists.txt
            path "CMakeLists.txt"
        }
    }
}

if (project.hasProperty("external.signing")) {

    def signingGradle = project.property("external.signing") + ".gradle"
    if (new File(signingGradle).exists()) {
        logger.lifecycle("applying signing properties from " + signingGradle)
        apply from: signingGradle
    }
    else {
        throw new InvalidUserDataException('Project parameter external.signing supplied but gradle file does not exist at path relative to project: ' + signingGradlePath)
    }
} else {
    logger.lifecycle("no external.signing property supplied." )
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    androidTestImplementation 'tools.fastlane:screengrab:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test:rules:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'

    implementation 'com.android.support:multidex:1.0.1'

    implementation ('com.android.support:appcompat-v7:27.1.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation project(':wrld-android-search-widget-release')
    implementation project(':wrld-navigation-release')
    implementation project(':wrld-navigation-widget-release')
    implementation 'com.android.volley:volley:1.1.0'
    implementation project(':wrld-navigation-search-release')
}
